<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="getRoutes-callTravelOnTip-subFlow" doc:id="33471759-1708-4725-826a-52a51d038ef4" >
		<set-variable value="#[&quot;/api/&quot; ++  (vars.transportType default &quot;&quot;) ++ p('http.requester.travelOnTip.routesPath')]" doc:name="Set Variable" doc:id="5a8daf32-9949-4245-a9c7-1c33902a2c8a" variableName="resourcePath" />
		<http:request method="GET" doc:name="Request" doc:id="91fc5aa6-ac22-472e-bcb8-6aa26d717a26" config-ref="HTTP_Request_configuration-TravelOnTip-SAPI" path="#[vars.resourcePath]">
					<http:headers><![CDATA[#[output application/java
---
{
	"transactionId" : vars.transactionId
}]]]></http:headers>
				</http:request>
		<ee:transform doc:name="Transform Message" doc:id="3a22500e-1dfc-4416-9032-444152e4cbc5">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
var LocationMapping = (readUrl("classpath://json/LocationCodeMapping.json","application/json"))
---
payload map(value,index)->(
	{
    "companyCode": vars.transportCompany,
    "originLocation": {
      "locationCode": value.originLocation.locationCode,
      "locationDesc": (LocationMapping filter($.locationCode == value.originLocation.locationCode))[0].locationDesc
    },
    "destinationLocation": {
      "locationCode": value.destinationLocation.locationCode,
      "locationDesc": (LocationMapping filter($.locationCode == value.destinationLocation.locationCode))[0].locationDesc
    }
	}
  )]]></ee:set-payload>
					</ee:message>
				</ee:transform>
	</sub-flow>
	<sub-flow name="getRoutes-callFastGo-subFlow" doc:id="0a6bbacf-31aa-437e-ad5b-0f94c123b1fc" >
		<set-variable value="#[&quot;/api/&quot; ++  (vars.transportType default &quot;&quot;) ++ p('http.requester.fastGo.routesPath')]" doc:name="Set Variable" doc:id="75f456be-bc43-4829-ab47-28ab46028906" variableName="resourcePath" />
		<http:request method="GET" doc:name="Request" doc:id="498713df-4365-428a-a4ed-f90924753a77" config-ref="HTTP_Request_configuration-FastGo-SAPI" path="#[vars.resourcePath]">
					<http:headers><![CDATA[#[output application/java
---
{
	"transactionId" : vars.transactionId
}]]]></http:headers>
				</http:request>
		<ee:transform doc:name="Transform Message" doc:id="4f40eedc-8dec-4fcd-a546-cd961c831c35">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
var LocationMapping = (readUrl("classpath://json/LocationCodeMapping.json","application/json"))
---
payload map(value,index)->{
    "companyCode": vars.transportCompany,
    "originLocation": {
      "locationCode": value.departureLocationCode,
      "locationDesc": (LocationMapping filter($.locationCode == value.departureLocationCode))[0].locationDesc
    },
    "destinationLocation": {
      "locationCode": value.arrivalLocationCode,
      "locationDesc": (LocationMapping filter($.locationCode == value.arrivalLocationCode))[0].locationDesc
    }
  }]]></ee:set-payload>
					</ee:message>
				</ee:transform>
	</sub-flow>
	<sub-flow name="getRoutes-implementation_Sub_Flow" doc:id="a17d23b5-abc6-4b87-96cf-f426b8597b9e" >
	
		<set-variable value="Routes" doc:name="Set Variable" doc:id="0abcc3e4-f872-4dc1-953d-e8b5ed298e06" variableName="resource"/>
		<choice doc:name="Choice" doc:id="98bd27f2-d432-4dc3-a6f7-e256deb9b225" >
			<when expression='#[vars.transportCompany == "FastGo"]'>
				<flow-ref doc:name="Flow Reference" doc:id="1cae5a6c-c92a-406b-82ec-4a607b99e2dd" name="getRoutes-callFastGo-subFlow" />
			</when>
			<when expression='#[vars.transportCompany == "TravelOnTip"]'>
				<flow-ref doc:name="Flow Reference" doc:id="9012458e-9dee-48f1-9c78-8f091cbbe436" name="getRoutes-callTravelOnTip-subFlow" />
			</when>
			<otherwise >
				<scatter-gather doc:name="Scatter-Gather" doc:id="0e53277d-cf5f-48c1-a12e-2e761ab1f8d7" >
					<route >
						<set-variable value='#["FastGo"]' doc:name="Set Variable" doc:id="17c7616d-eddb-4f75-b527-4bffa990ac33" variableName="transportCompany"/>
						<flow-ref doc:name="Flow Reference" doc:id="5878ae9d-4340-4aa7-b770-aeb7ff45eefc" name="getRoutes-callFastGo-subFlow"/>
					</route>
					<route >
						<set-variable value='#["TravelOnTip"]' doc:name="Set Variable" doc:id="0be782c4-5768-4443-8fd5-8b0a7f73f31f" variableName="transportCompany"/>
						<flow-ref doc:name="Flow Reference" doc:id="56193b1d-388d-4236-924c-485c7b47e4f0" name="getRoutes-callTravelOnTip-subFlow"/>
					</route>
				</scatter-gather>
				<logger level="INFO" doc:name="Logger" doc:id="89ea8919-9d2f-45ac-891b-4bf30dcf757f" message='#[(payload."0".payload default []) ++ (payload."1".payload default [])]' />
				<set-payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;(payload."0".payload default []) ++ (payload."1".payload default [])]' doc:name="Set Payload" doc:id="d4ed1858-d057-48f5-8c3e-fef328e97fa9" />
			</otherwise>
		</choice>
	</sub-flow>
</mule>
